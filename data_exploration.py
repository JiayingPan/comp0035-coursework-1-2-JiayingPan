import matplotlib.pyplot as plt
import pandas as pd
import numpy as np


def set_pandas_display_options(df):
    """ Sets the pandas display options based on the shape of the dataframe

    :param DataFrame df: the data
    """
    pd.set_option('display.max_rows', df.shape[0] + 1)
    pd.set_option('display.max_columns', df.shape[1] + 1)


if __name__ == '__main__':
    df = pd.read_csv('Data/Prepared_dataset.csv', parse_dates=['utc'], dtype={'utc': str})
    set_pandas_display_options(df)

    # 1. Print the stats generated by describe
    print(df.describe())

    # 2. Generate a box plot to show the outliers (in a same box with same scale)
    bp = df.plot.box()
    plt.show()

    # 3. Generate box plots to show the outliers (in separate boxes with different scale)
    bp_sub = df.plot.box(subplots=True)
    plt.show()

    # 4. Generate a line plot of the data
    cols = ["PM2.5", "PM10", "Total"]
    df = pd.read_csv('data/Prepared_dataset.csv', usecols=cols)
    line_plot = df.plot.line()
    plt.show()

    # 5. Create two new dataframes, one with PM2.5 data and one with PM10 data
    #df_PM25 = df.loc[df['PM2.5'] == 'PM2.5']
    #df_PM10 = df.loc[df['PM10'] == 'PM10']

    # 6. Reset the index of each of the new dataframes
    #df_PM25.reset_index(drop=True, inplace=True)
    #df_PM10.reset_index(drop=True, inplace=True)

    # 7. Create two line plots of PM values
    cols = ["PM2.5"]
    df = pd.read_csv('data/Prepared_dataset.csv', usecols=cols)
    line_plot = df.plot.line()
    plt.show()

    cols = ["PM10"]
    df = pd.read_csv('data/Prepared_dataset.csv', usecols=cols)
    line_plot = df.plot.line()
    plt.show()

    # 8. Create a line plot of PM2.5/PM10 ratio
    cols = ['PM2.5', 'PM10']
    df = pd.read_csv('data/Prepared_dataset.csv', usecols=cols, dtype={'utc': str, 'unit': str})
    df['PM2.5:PM10'] = df['PM2.5'] / df['PM10']
    line_plot = df.plot.line(y='PM2.5:PM10', label="PM2.5/PM10 Ratio")
    plt.show()

    # 9. Define the % equation
    cols = ['PM2.5', 'PM10', 'Total']
    df = pd.read_csv('data/Prepared_dataset.csv', usecols=cols, dtype={'utc': str, 'unit': str})
    df['PM2.5%'] = df['PM2.5'] / df['Total']
    df['PM10%'] = df['PM10'] / df['Total']

    # 10. Create the stacked bar plot of the % for PM2.5 and PM10
    df.plot.bar(y=['PM2.5%', 'PM10%'], stacked=True)

    # 11. Ensures the x-axis labels are fully visible
    plt.gcf().subplots_adjust(bottom=0.1)
    plt.show()



